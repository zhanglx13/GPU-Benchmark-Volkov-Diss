#! /usr/bin/env bash

## Batch run experiments for all occupancy (1-64) for a single ALPHA

## $1: ALPHA

declare -A smem
smem=(
    [64]=768
    [63]=1230
    [60]=1024
    [56]=769
    [55]=1030
    [54]=1230
    [52]=877
    [50]=1130
    [49]=1540
    [48]=1024
    [45]=1230
    [44]=1030
    [42]=1540
    [40]=1130
    [39]=877
    [36]=1230
    [35]=1540
    [33]=1030
    [32]=1536
    [30]=1130
    [28]=1540
    [27]=1230
    [26]=877
    [25]=2050
    [24]=2048
    [22]=1030
    [21]=4096
    [20]=2050
    [18]=2048
    [16]=3072
    [15]=4096
    [14]=6144
    [13]=877
    [12]=4096
    [11]=1030
    [10]=6144
    [9]=4096
    [8]=6144
    [7]=12288
    [6]=6144
    [5]=12288
    [4]=12288
    [3]=12288
    [2]=12288
    [1]=12288
)

declare -A bs
bs=(
    [64]=128
    [63]=224
    [60]=160
    [56]=128
    [55]=160
    [54]=192
    [52]=128
    [50]=160
    [49]=224
    [48]=128
    [45]=160
    [44]=128
    [42]=192
    [40]=128
    [39]=96
    [36]=128
    [35]=160
    [33]=96
    [32]=128
    [30]=96
    [28]=128
    [27]=96
    [26]=64
    [25]=160
    [24]=128
    [22]=64
    [21]=224
    [20]=128
    [18]=96
    [16]=128
    [15]=160
    [14]=224
    [13]=32
    [12]=128
    [11]=32
    [10]=160
    [9]=96
    [8]=128
    [7]=224
    [6]=96
    [5]=160
    [4]=128
    [3]=96
    [2]=64
)

if [[ $# -eq 0 ]]; then
    echo "Need to specify alpha: ./batch_run.sh <ALPHA>"
    exit 0
fi

echo "ALPHA  maxOcc   arithThr   ITER   BS   SMEM  maxLat   warps" > arithThr_$1.txt
for occ in `seq 64 -1 1`
do
    if [[ ${bs[$occ]} ]]; then
        echo "###########################################"
        printf "##      ALPHA = %3d     maxOcc = %2d      ##\n" $1 $occ
        #echo "## ALPHA=$1 maxOcc=$occ ##"
        echo "###########################################"
        for iter in 32 64 96 128 160 192 224 256 288 320
        do
            echo ""
            echo ">>> ITER = $iter  ALPHA = $1  maxOcc = $occ"
            echo ""
            ./single_run.sh $iter $1 ${bs[$occ]} ${smem[$occ]}
        done
    fi
done
